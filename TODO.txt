ENCRYPTION / UPLOAD
_______________________________________________________________________

[x] add arbitrary filename to upload form
[x] send chunk number with chunk -> save file with chunk number as name
[x] create directory per file
[x] use filename as directory name
[x] generate passphrase
[x] encrypt chunks
[ ] optional filename encryption
[x] create download url
[ ] add file description
[x] save iv and download link to db
[ ] implement encryption web workers (for upload and encryption) 
	(see: https://github.com/STRML/securesha.re-client/blob/master/jquery-spaghetti/app/uploader.js#L139 
	or hushfile)


DECRYPTION / DOWNLOAD
_______________________________________________________________________

[x] download link
[x] decrypt file


MESSAGING
_______________________________________________________________________


FRONTEND
_______________________________________________________________________

[ ] progress bar for encryption and upload
[ ] display files in vault
[ ] show download link after upload
[ ] link to file in /vault (?)
[ ] cms inteface 

BACKEND GENERAL
_______________________________________________________________________

[x] csrf token
[x] make it work with nginx
[x] tls
[ ] system and server config
[ ] cms / admin user

ATTACK
_______________________________________________________________________

[ ] get into wireshark
[ ] get into burp suite 
[ ] kali general ?
[ ] find different attack vectors
[ ] social engineering ("So, what are you guys doing?")

